from collections import deque

def kahn(graph):
    in_degree = {u: 0 for u in graph}

    for u in graph:
        for v in graph[u]:
            in_degree[v] += 1

    queue = deque([u for u in in_degree if in_degree[u] == 0])
    result = []

    while queue:
        u = queue.popleft()
        result.append(u)

        for v in graph[u]:
            in_degree[v] -= 1
            if in_degree[v] == 0:
                queue.append(v)

    if len(result) != len(graph):
        return None  

    return result

''' A → B → C
    ↓   ↓
    D → E
    '''
graph = {
    'A': ['B', 'D'],
    'B': ['C', 'E'],
    'C': [],
    'D': ['E'],
    'E': []
}

print(kahn(graph)) 
